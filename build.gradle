import org.apache.tools.ant.taskdefs.condition.Os

plugins {
  id "java-library"
}
ext {
  slf4jVersion = '2.0.6'
  awsSDKVersion='1.12.384'
  bouncyCastleVersion = '1.72'
}

defaultTasks 'clean', 'buildCSR'
sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8
group   = 'io.github.quotidian-ennui'

repositories {
  mavenCentral()
}


def asFileUrl(filepath) {
  return "file:///" + new java.net.URI(null, filepath, null).toASCIIString();
}

configurations.all {
  resolutionStrategy.cacheChangingModulesFor 60, "minutes"
  resolutionStrategy.dependencySubstitution {
    substitute module('commons-logging:commons-logging') using module("org.slf4j:jcl-over-slf4j:$slf4jVersion")

    // Redirect bouncy castle jdk15on to jdk18on
    substitute module('org.bouncycastle:bcprov-jdk15on') using module("org.bouncycastle:bcprov-jdk18on:$bouncyCastleVersion")
    substitute module('org.bouncycastle:bcprov-ext-jdk15on') using module("org.bouncycastle:bcprov-ext-jdk18on:$bouncyCastleVersion")
    substitute module('org.bouncycastle:bcpkix-jdk15on') using module("org.bouncycastle:bcpkix-jdk18on:$bouncyCastleVersion")
    substitute module('org.bouncycastle:bcmail-jdk15on') using module("org.bouncycastle:bcmail-jdk18on:$bouncyCastleVersion")
    substitute module('org.bouncycastle:bcutil-jdk15on') using module("org.bouncycastle:bcutil-jdk18on:$bouncyCastleVersion")
    substitute module('org.bouncycastle:bcpg-jdk15on') using module("org.bouncycastle:bcpg-jdk18on:$bouncyCastleVersion")
    substitute module('org.bouncycastle:bcjmail-jdk15on') using module("org.bouncycastle:bcjmail-jdk18on:$bouncyCastleVersion")
    substitute module('org.bouncycastle:bctls-jdk15on') using module("org.bouncycastle:bctls-jdk18on:$bouncyCastleVersion")

  }
}

dependencies {
  implementation ("com.amazonaws:aws-java-sdk-kms:$awsSDKVersion")
  implementation ("org.bouncycastle:bcprov-jdk18on:$bouncyCastleVersion")
  implementation ("org.bouncycastle:bcpkix-jdk18on:$bouncyCastleVersion")
  implementation ("org.bouncycastle:bcmail-jdk18on:$bouncyCastleVersion")
  implementation (platform("com.fasterxml.jackson:jackson-bom:2.14.1"))

  implementation ("org.slf4j:slf4j-api:$slf4jVersion")

  runtimeOnly ("org.slf4j:slf4j-simple:$slf4jVersion")
  runtimeOnly ("org.slf4j:jcl-over-slf4j:$slf4jVersion")

  if (JavaVersion.current().ordinal() >= JavaVersion.VERSION_1_9.ordinal()) {
    runtimeOnly ("javax.xml.bind:jaxb-api:2.3.1")
  }

}

task LauncherJar(type: Jar) {
    archiveAppendix = "launcher"
    ext.launcherClasspath = { ->
      def verifyLibs = [
              configurations.runtimeClasspath.collect { asFileUrl(it.getCanonicalPath()) }.join(' '),
              asFileUrl(jar.archivePath.getCanonicalPath())
              ]
      return verifyLibs.join(' ')
    }
    manifest {
        attributes ("Class-Path": launcherClasspath())
    }
}

task buildCSR(type: JavaExec, dependsOn: [jar, LauncherJar]) {
    group = 'Execution'
    description = 'Generate a CSR'
    classpath = files(LauncherJar.archivePath)
    mainClass = 'io.github.quotidianennui.CertRequestBuilder'
    args "$projectDir/build.properties"
}
