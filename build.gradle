plugins {
  id "java-library"
  id "com.diffplug.spotless" version "7.0.3"
}

ext {
  slf4jVersion = '2.0.17'
  awsSDKVersion = '2.31.54'
  bouncyCastleVersion = '1.80'
}

defaultTasks 'clean', 'buildCSR'
group = 'io.github.quotidian-ennui'

java {
  toolchain {
    languageVersion = JavaLanguageVersion.of(21)
  }
}

repositories {
  mavenCentral()
}

static def asFileUrl(String filepath) {
  return "file:///${new URI(null, filepath, null).toASCIIString()}"
}

configurations.configureEach {
  resolutionStrategy.cacheChangingModulesFor 60, "minutes"
  resolutionStrategy.dependencySubstitution {
    // bridge JCL to slf4j
    substitute module('commons-logging:commons-logging') using module("org.slf4j:jcl-over-slf4j:$slf4jVersion")
  }
}

dependencies {
  implementation("software.amazon.awssdk:kms:$awsSDKVersion")
  implementation("org.bouncycastle:bcprov-jdk18on:$bouncyCastleVersion")
  implementation("org.bouncycastle:bcpkix-jdk18on:$bouncyCastleVersion")
  implementation("org.bouncycastle:bcmail-jdk18on:$bouncyCastleVersion")

  implementation("org.slf4j:slf4j-api:$slf4jVersion")

  runtimeOnly("org.slf4j:slf4j-simple:$slf4jVersion")
  runtimeOnly("org.slf4j:jcl-over-slf4j:$slf4jVersion")
}

tasks.register('LauncherJar', Jar) {
  archiveAppendix = "launcher"
  def launcherClasspath = {
    ->
    def verifyLibs = [
      configurations.runtimeClasspath.collect { asFileUrl(it.getCanonicalPath()) }.join(' '),
      asFileUrl(jar.archiveFile.get().asFile.getCanonicalPath())
    ]
    return verifyLibs.join(' ')
  }
  manifest {
    attributes("Class-Path": launcherClasspath())
  }
}

tasks.register('buildCSR', JavaExec) {
  dependsOn([jar, LauncherJar])
  group = 'Execution'
  description = 'Generate a CSR'

  classpath = files(LauncherJar.archiveFile)
  mainClass = 'io.github.quotidianennui.CertRequestBuilder'
  args "${projectDir}/build.properties"
}

spotless {
  groovyGradle {
    target '**/*.gradle'
    greclipse()
    leadingTabsToSpaces(2)
  }
  java {
    toggleOffOn()
    // While I don't necessarily like GJF, it is consistent.
    googleJavaFormat()
    removeUnusedImports()
  }
}
